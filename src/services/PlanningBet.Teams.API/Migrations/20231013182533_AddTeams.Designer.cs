// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlanningBet.Teams.API.Database;

#nullable disable

namespace PlanningBet.Teams.API.Migrations
{
    [DbContext(typeof(TeamsDbContext))]
    [Migration("20231013182533_AddTeams")]
    partial class AddTeams
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CleanName")
                        .HasColumnType("text")
                        .HasColumnName("clean_name");

                    b.Property<int>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<int>("CompetitionId")
                        .HasColumnType("integer")
                        .HasColumnName("competition_id");

                    b.Property<string>("CompetitionType")
                        .HasColumnType("text")
                        .HasColumnName("competition_type");

                    b.Property<string>("Country")
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Season")
                        .HasColumnType("text")
                        .HasColumnName("season");

                    b.HasKey("Id")
                        .HasName("p_k_teams");

                    b.ToTable("teams");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamFTStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("AvgGoalsConcededFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_conceded_f_t_away");

                    b.Property<decimal>("AvgGoalsConcededFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_conceded_f_t_home");

                    b.Property<decimal>("AvgGoalsConcededFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_conceded_f_t_overall");

                    b.Property<decimal>("AvgGoalsScoredFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_scored_f_t_away");

                    b.Property<decimal>("AvgGoalsScoredFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_scored_f_t_home");

                    b.Property<decimal>("AvgGoalsScoredFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_scored_f_t_overall");

                    b.Property<decimal>("CleanSheetPercentageFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("clean_sheet_percentage_f_t_away");

                    b.Property<decimal>("CleanSheetPercentageFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("clean_sheet_percentage_f_t_home");

                    b.Property<decimal>("CleanSheetPercentageFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("clean_sheet_percentage_f_t_overall");

                    b.Property<decimal>("DrawPercentageFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("draw_percentage_f_t_away");

                    b.Property<decimal>("DrawPercentageFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("draw_percentage_f_t_home");

                    b.Property<decimal>("DrawPercentageFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("draw_percentage_f_t_overall");

                    b.Property<decimal>("FailedToScorePercentageFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("failed_to_score_percentage_f_t_away");

                    b.Property<decimal>("FailedToScorePercentageFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("failed_to_score_percentage_f_t_home");

                    b.Property<decimal>("FailedToScorePercentageFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("failed_to_score_percentage_f_t_overall");

                    b.Property<int>("GoalsConcededFTAway")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_f_t_away");

                    b.Property<int>("GoalsConcededFTHome")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_f_t_home");

                    b.Property<int>("GoalsConcededFTOverall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_f_t_overall");

                    b.Property<int>("GoalsScoredFTAway")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_f_t_away");

                    b.Property<int>("GoalsScoredFTHome")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_f_t_home");

                    b.Property<int>("GoalsScoredFTOverall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_f_t_overall");

                    b.Property<decimal>("LosePercentageFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("lose_percentage_f_t_away");

                    b.Property<decimal>("LosePercentageFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("lose_percentage_f_t_home");

                    b.Property<decimal>("LosePercentageFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("lose_percentage_f_t_overall");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid")
                        .HasColumnName("team_id");

                    b.Property<decimal>("WinPercentageFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("win_percentage_f_t_away");

                    b.Property<decimal>("WinPercentageFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("win_percentage_f_t_home");

                    b.Property<decimal>("WinPercentageFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("win_percentage_f_t_overall");

                    b.HasKey("Id")
                        .HasName("p_k_teams_ftstats");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("teams_ftstats", (string)null);
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamGeneralStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("AvgGoalsConcededAway")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_conceded_away");

                    b.Property<decimal>("AvgGoalsConcededHome")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_conceded_home");

                    b.Property<decimal>("AvgGoalsConcededOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_conceded_overall");

                    b.Property<decimal>("AvgGoalsScoredAway")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_scored_away");

                    b.Property<decimal>("AvgGoalsScoredHome")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_scored_home");

                    b.Property<decimal>("AvgGoalsScoredOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_scored_overall");

                    b.Property<decimal>("AvgShotsAway")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_shots_away");

                    b.Property<decimal>("AvgShotsHome")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_shots_home");

                    b.Property<decimal>("AvgShotsOnTargetAway")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_shots_on_target_away");

                    b.Property<decimal>("AvgShotsOnTargetHome")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_shots_on_target_home");

                    b.Property<decimal>("AvgShotsOnTargetOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_shots_on_target_overall");

                    b.Property<decimal>("AvgShotsOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_shots_overall");

                    b.Property<decimal>("AvgTotalGoalsAway")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_total_goals_away");

                    b.Property<decimal>("AvgTotalGoalsHome")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_total_goals_home");

                    b.Property<decimal>("AvgTotalGoalsOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_total_goals_overall");

                    b.Property<int>("BothTeamsToScoredAway")
                        .HasColumnType("integer")
                        .HasColumnName("both_teams_to_scored_away");

                    b.Property<int>("BothTeamsToScoredHome")
                        .HasColumnType("integer")
                        .HasColumnName("both_teams_to_scored_home");

                    b.Property<int>("BothTeamsToScoredOverall")
                        .HasColumnType("integer")
                        .HasColumnName("both_teams_to_scored_overall");

                    b.Property<decimal>("CleanSheetPercentageAway")
                        .HasColumnType("numeric")
                        .HasColumnName("clean_sheet_percentage_away");

                    b.Property<decimal>("CleanSheetPercentageHome")
                        .HasColumnType("numeric")
                        .HasColumnName("clean_sheet_percentage_home");

                    b.Property<decimal>("CleanSheetPercentageOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("clean_sheet_percentage_overall");

                    b.Property<decimal>("FailedToScorePercentageAway")
                        .HasColumnType("numeric")
                        .HasColumnName("failed_to_score_percentage_away");

                    b.Property<decimal>("FailedToScorePercentageHome")
                        .HasColumnType("numeric")
                        .HasColumnName("failed_to_score_percentage_home");

                    b.Property<decimal>("FailedToScorePercentageOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("failed_to_score_percentage_overall");

                    b.Property<decimal>("FirstGoalScoredPercentageAway")
                        .HasColumnType("numeric")
                        .HasColumnName("first_goal_scored_percentage_away");

                    b.Property<decimal>("FirstGoalScoredPercentageHome")
                        .HasColumnType("numeric")
                        .HasColumnName("first_goal_scored_percentage_home");

                    b.Property<decimal>("FirstGoalScoredPercentageOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("first_goal_scored_percentage_overall");

                    b.Property<int>("GoalsConcededAway")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_away");

                    b.Property<int>("GoalsConcededHome")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_home");

                    b.Property<int>("GoalsConcededOverall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_overall");

                    b.Property<int>("GoalsScoredAway")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_away");

                    b.Property<int>("GoalsScoredHome")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_home");

                    b.Property<int>("GoalsScoredOverall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_overall");

                    b.Property<decimal>("MatchesPlayedAway")
                        .HasColumnType("numeric")
                        .HasColumnName("matches_played_away");

                    b.Property<int>("MatchesPlayedHome")
                        .HasColumnType("integer")
                        .HasColumnName("matches_played_home");

                    b.Property<decimal>("MatchesPlayedOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("matches_played_overall");

                    b.Property<decimal>("PointsPerGameAway")
                        .HasColumnType("numeric")
                        .HasColumnName("points_per_game_away");

                    b.Property<decimal>("PointsPerGameHome")
                        .HasColumnType("numeric")
                        .HasColumnName("points_per_game_home");

                    b.Property<decimal>("PointsPerGameOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("points_per_game_overall");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid")
                        .HasColumnName("team_id");

                    b.Property<int>("TotalWinsAway")
                        .HasColumnType("integer")
                        .HasColumnName("total_wins_away");

                    b.Property<int>("TotalWinsHome")
                        .HasColumnType("integer")
                        .HasColumnName("total_wins_home");

                    b.Property<int>("TotalWinsOverall")
                        .HasColumnType("integer")
                        .HasColumnName("total_wins_overall");

                    b.Property<decimal>("WinsPercentageAway")
                        .HasColumnType("numeric")
                        .HasColumnName("wins_percentage_away");

                    b.Property<decimal>("WinsPercentageHome")
                        .HasColumnType("numeric")
                        .HasColumnName("wins_percentage_home");

                    b.Property<decimal>("WinsPercentageOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("wins_percentage_overall");

                    b.Property<decimal>("XgAgainstAway")
                        .HasColumnType("numeric")
                        .HasColumnName("xg_against_away");

                    b.Property<decimal>("XgAgainstHome")
                        .HasColumnType("numeric")
                        .HasColumnName("xg_against_home");

                    b.Property<decimal>("XgAgainstOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("xg_against_overall");

                    b.Property<decimal>("XgForAway")
                        .HasColumnType("numeric")
                        .HasColumnName("xg_for_away");

                    b.Property<decimal>("XgForHome")
                        .HasColumnType("numeric")
                        .HasColumnName("xg_for_home");

                    b.Property<decimal>("XgForOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("xg_for_overall");

                    b.HasKey("Id")
                        .HasName("p_k_teams_generalstats");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("teams_generalstats", (string)null);
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamGoalsStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("FirstGoalScoredAway")
                        .HasColumnType("integer")
                        .HasColumnName("first_goal_scored_away");

                    b.Property<int>("FirstGoalScoredHome")
                        .HasColumnType("integer")
                        .HasColumnName("first_goal_scored_home");

                    b.Property<int>("FirstGoalScoredOverall")
                        .HasColumnType("integer")
                        .HasColumnName("first_goal_scored_overall");

                    b.Property<int>("GoalsConcededMin0To15Away")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_min0_to15_away");

                    b.Property<int>("GoalsConcededMin0To15Home")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_min0_to15_home");

                    b.Property<int>("GoalsConcededMin0To15Overall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_min0_to15_overall");

                    b.Property<int>("GoalsConcededMin16To30Away")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_min16_to30_away");

                    b.Property<int>("GoalsConcededMin16To30Home")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_min16_to30_home");

                    b.Property<int>("GoalsConcededMin16To30Overall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_min16_to30_overall");

                    b.Property<int>("GoalsConcededMin31To45Away")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_min31_to45_away");

                    b.Property<int>("GoalsConcededMin31To45Home")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_min31_to45_home");

                    b.Property<int>("GoalsConcededMin31To45Overall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_min31_to45_overall");

                    b.Property<int>("GoalsScoredMin0To15Away")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_min0_to15_away");

                    b.Property<int>("GoalsScoredMin0To15Home")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_min0_to15_home");

                    b.Property<int>("GoalsScoredMin0To15Overall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_min0_to15_overall");

                    b.Property<int>("GoalsScoredMin16To30Away")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_min16_to30_away");

                    b.Property<int>("GoalsScoredMin16To30Home")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_min16_to30_home");

                    b.Property<int>("GoalsScoredMin16To30Overall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_min16_to30_overall");

                    b.Property<int>("GoalsScoredMin31To45Away")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_min31_to45_away");

                    b.Property<int>("GoalsScoredMin31To45Home")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_min31_to45_home");

                    b.Property<int>("GoalsScoredMin31To45Overall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_min31_to45_overall");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid")
                        .HasColumnName("team_id");

                    b.HasKey("Id")
                        .HasName("p_k_teams_goalsstats");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("teams_goalsstats", (string)null);
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamHTStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("AvgGoalsConcededFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_conceded_f_t_away");

                    b.Property<decimal>("AvgGoalsConcededFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_conceded_f_t_home");

                    b.Property<decimal>("AvgGoalsConcededFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_conceded_f_t_overall");

                    b.Property<decimal>("AvgGoalsScoredFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_scored_f_t_away");

                    b.Property<decimal>("AvgGoalsScoredFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_scored_f_t_home");

                    b.Property<decimal>("AvgGoalsScoredFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("avg_goals_scored_f_t_overall");

                    b.Property<decimal>("CleanSheetPercentageFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("clean_sheet_percentage_f_t_away");

                    b.Property<decimal>("CleanSheetPercentageFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("clean_sheet_percentage_f_t_home");

                    b.Property<decimal>("CleanSheetPercentageFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("clean_sheet_percentage_f_t_overall");

                    b.Property<decimal>("DrawPercentageFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("draw_percentage_f_t_away");

                    b.Property<decimal>("DrawPercentageFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("draw_percentage_f_t_home");

                    b.Property<decimal>("DrawPercentageFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("draw_percentage_f_t_overall");

                    b.Property<decimal>("FailedToScorePercentageFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("failed_to_score_percentage_f_t_away");

                    b.Property<decimal>("FailedToScorePercentageFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("failed_to_score_percentage_f_t_home");

                    b.Property<decimal>("FailedToScorePercentageFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("failed_to_score_percentage_f_t_overall");

                    b.Property<int>("GoalsConcededFTAway")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_f_t_away");

                    b.Property<int>("GoalsConcededFTHome")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_f_t_home");

                    b.Property<int>("GoalsConcededFTOverall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_conceded_f_t_overall");

                    b.Property<int>("GoalsScoredFTAway")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_f_t_away");

                    b.Property<int>("GoalsScoredFTHome")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_f_t_home");

                    b.Property<int>("GoalsScoredFTOverall")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored_f_t_overall");

                    b.Property<decimal>("LosePercentageFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("lose_percentage_f_t_away");

                    b.Property<decimal>("LosePercentageFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("lose_percentage_f_t_home");

                    b.Property<decimal>("LosePercentageFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("lose_percentage_f_t_overall");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid")
                        .HasColumnName("team_id");

                    b.Property<decimal>("WinPercentageFTAway")
                        .HasColumnType("numeric")
                        .HasColumnName("win_percentage_f_t_away");

                    b.Property<decimal>("WinPercentageFTHome")
                        .HasColumnType("numeric")
                        .HasColumnName("win_percentage_f_t_home");

                    b.Property<decimal>("WinPercentageFTOverall")
                        .HasColumnType("numeric")
                        .HasColumnName("win_percentage_f_t_overall");

                    b.HasKey("Id")
                        .HasName("p_k_teams_htstats");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("teams_htstats", (string)null);
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamMatches.TeamMatch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("AwayTeamGoals")
                        .HasColumnType("integer")
                        .HasColumnName("away_team_goals");

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("integer")
                        .HasColumnName("away_team_id");

                    b.Property<int>("CompetitionId")
                        .HasColumnType("integer")
                        .HasColumnName("competition_id");

                    b.Property<int>("HomeTeamGoals")
                        .HasColumnType("integer")
                        .HasColumnName("home_team_goals");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("integer")
                        .HasColumnName("home_team_id");

                    b.Property<long>("MatchDateTimestamp")
                        .HasColumnType("bigint")
                        .HasColumnName("match_date_timestamp");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer")
                        .HasColumnName("match_id");

                    b.Property<string>("MatchStatus")
                        .HasColumnType("text")
                        .HasColumnName("match_status");

                    b.Property<int>("RoundId")
                        .HasColumnType("integer")
                        .HasColumnName("round_id");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uuid")
                        .HasColumnName("team_id");

                    b.HasKey("Id")
                        .HasName("p_k_team_match");

                    b.HasIndex("TeamId");

                    b.ToTable("team_match");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamFTStats", b =>
                {
                    b.HasOne("PlanningBet.Teams.API.Entities.Team", "Team")
                        .WithOne("FTStats")
                        .HasForeignKey("PlanningBet.Teams.API.Entities.TeamFTStats", "TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_teams_ftstats_teams_team_id");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamGeneralStats", b =>
                {
                    b.HasOne("PlanningBet.Teams.API.Entities.Team", "Team")
                        .WithOne("GeneralStats")
                        .HasForeignKey("PlanningBet.Teams.API.Entities.TeamGeneralStats", "TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_teams_generalstats_teams_team_id");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamGoalsStats", b =>
                {
                    b.HasOne("PlanningBet.Teams.API.Entities.Team", "Team")
                        .WithOne("GoalsStats")
                        .HasForeignKey("PlanningBet.Teams.API.Entities.TeamGoalsStats", "TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_teams_goalsstats_teams_team_id");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamHTStats", b =>
                {
                    b.HasOne("PlanningBet.Teams.API.Entities.Team", "Team")
                        .WithOne("HTStats")
                        .HasForeignKey("PlanningBet.Teams.API.Entities.TeamHTStats", "TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_teams_htstats_teams_team_id");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamMatches.TeamMatch", b =>
                {
                    b.HasOne("PlanningBet.Teams.API.Entities.Team", null)
                        .WithMany("Matches")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("f_k_team_match_teams_team_id");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.Team", b =>
                {
                    b.Navigation("FTStats");

                    b.Navigation("GeneralStats");

                    b.Navigation("GoalsStats");

                    b.Navigation("HTStats");

                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
