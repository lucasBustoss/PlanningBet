// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlanningBet.Teams.API.Database;

#nullable disable

namespace PlanningBet.Teams.API.Migrations
{
    [DbContext(typeof(TeamsDbContext))]
    [Migration("20230822184918_AddStats")]
    partial class AddStats
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CleanName")
                        .HasColumnType("text");

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<int>("CompetitionId")
                        .HasColumnType("integer");

                    b.Property<string>("CompetitionType")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Season")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamFTStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AvgGoalsConcededFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsConcededFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsConcededFTOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsScoredFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsScoredFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsScoredFTOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CleanSheetPercentageFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CleanSheetPercentageFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CleanSheetPercentageFTOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DrawPercentageFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DrawPercentageFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DrawPercentageFTOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FailedToScorePercentageFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FailedToScorePercentageFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FailedToScorePercentageFTOverall")
                        .HasColumnType("numeric");

                    b.Property<int>("GoalsConcededFTAway")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededFTHome")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededFTOverall")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredFTAway")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredFTHome")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredFTOverall")
                        .HasColumnType("integer");

                    b.Property<decimal>("LosePercentageFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LosePercentageFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LosePercentageFTOverall")
                        .HasColumnType("numeric");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("WinPercentageFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WinPercentageFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WinPercentageFTOverall")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("Teams_FTStats", (string)null);
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamGeneralStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AvgGoalsConcededAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsConcededHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsConcededOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsScoredAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsScoredHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsScoredOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgShotsAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgShotsHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgShotsOnTargetAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgShotsOnTargetHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgShotsOnTargetOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgShotsOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgTotalGoalsAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgTotalGoalsHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgTotalGoalsOverall")
                        .HasColumnType("numeric");

                    b.Property<int>("BothTeamsToScoredAway")
                        .HasColumnType("integer");

                    b.Property<int>("BothTeamsToScoredHome")
                        .HasColumnType("integer");

                    b.Property<int>("BothTeamsToScoredOverall")
                        .HasColumnType("integer");

                    b.Property<decimal>("CleanSheetPercentageAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CleanSheetPercentageHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CleanSheetPercentageOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FailedToScorePercentageAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FailedToScorePercentageHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FailedToScorePercentageOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FirstGoalScoredPercentageAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FirstGoalScoredPercentageHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FirstGoalScoredPercentageOverall")
                        .HasColumnType("numeric");

                    b.Property<int>("GoalsConcededAway")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededHome")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededOverall")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredAway")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredHome")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredOverall")
                        .HasColumnType("integer");

                    b.Property<decimal>("MatchesPlayedAway")
                        .HasColumnType("numeric");

                    b.Property<int>("MatchesPlayedHome")
                        .HasColumnType("integer");

                    b.Property<decimal>("MatchesPlayedOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PointsPerGameAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PointsPerGameHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PointsPerGameOverall")
                        .HasColumnType("numeric");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid");

                    b.Property<int>("TotalWinsAway")
                        .HasColumnType("integer");

                    b.Property<int>("TotalWinsHome")
                        .HasColumnType("integer");

                    b.Property<int>("TotalWinsOverall")
                        .HasColumnType("integer");

                    b.Property<decimal>("WinsPercentageAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WinsPercentageHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WinsPercentageOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("XgAgainstAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("XgAgainstHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("XgAgainstOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("XgForAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("XgForHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("XgForOverall")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("Teams_GeneralStats", (string)null);
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamGoalsStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("FirstGoalScoredAway")
                        .HasColumnType("integer");

                    b.Property<int>("FirstGoalScoredHome")
                        .HasColumnType("integer");

                    b.Property<int>("FirstGoalScoredOverall")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededMin0To15Away")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededMin0To15Home")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededMin0To15Overall")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededMin16To30Away")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededMin16To30Home")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededMin16To30Overall")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededMin31To45Away")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededMin31To45Home")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededMin31To45Overall")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredMin0To15Away")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredMin0To15Home")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredMin0To15Overall")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredMin16To30Away")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredMin16To30Home")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredMin16To30Overall")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredMin31To45Away")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredMin31To45Home")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredMin31To45Overall")
                        .HasColumnType("integer");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("Teams_GoalsStats", (string)null);
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamHTStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AvgGoalsConcededFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsConcededFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsConcededFTOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsScoredFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsScoredFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgGoalsScoredFTOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CleanSheetPercentageFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CleanSheetPercentageFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CleanSheetPercentageFTOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DrawPercentageFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DrawPercentageFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DrawPercentageFTOverall")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FailedToScorePercentageFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FailedToScorePercentageFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FailedToScorePercentageFTOverall")
                        .HasColumnType("numeric");

                    b.Property<int>("GoalsConcededFTAway")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededFTHome")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsConcededFTOverall")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredFTAway")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredFTHome")
                        .HasColumnType("integer");

                    b.Property<int>("GoalsScoredFTOverall")
                        .HasColumnType("integer");

                    b.Property<decimal>("LosePercentageFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LosePercentageFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LosePercentageFTOverall")
                        .HasColumnType("numeric");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("WinPercentageFTAway")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WinPercentageFTHome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("WinPercentageFTOverall")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("Teams_HTStats", (string)null);
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamFTStats", b =>
                {
                    b.HasOne("PlanningBet.Teams.API.Entities.Team", "Team")
                        .WithOne("FTStats")
                        .HasForeignKey("PlanningBet.Teams.API.Entities.TeamFTStats", "TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamGeneralStats", b =>
                {
                    b.HasOne("PlanningBet.Teams.API.Entities.Team", "Team")
                        .WithOne("GeneralStats")
                        .HasForeignKey("PlanningBet.Teams.API.Entities.TeamGeneralStats", "TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamGoalsStats", b =>
                {
                    b.HasOne("PlanningBet.Teams.API.Entities.Team", "Team")
                        .WithOne("GoalsStats")
                        .HasForeignKey("PlanningBet.Teams.API.Entities.TeamGoalsStats", "TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.TeamHTStats", b =>
                {
                    b.HasOne("PlanningBet.Teams.API.Entities.Team", "Team")
                        .WithOne("HTStats")
                        .HasForeignKey("PlanningBet.Teams.API.Entities.TeamHTStats", "TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PlanningBet.Teams.API.Entities.Team", b =>
                {
                    b.Navigation("FTStats");

                    b.Navigation("GeneralStats");

                    b.Navigation("GoalsStats");

                    b.Navigation("HTStats");
                });
#pragma warning restore 612, 618
        }
    }
}
