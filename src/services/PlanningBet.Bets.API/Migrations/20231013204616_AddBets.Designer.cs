// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlanningBet.Bets.API.Database;

#nullable disable

namespace PlanningBet.Bets.API.Migrations
{
    [DbContext(typeof(BetsDbContext))]
    [Migration("20231013204616_AddBets")]
    partial class AddBets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlanningBet.Bets.API.Models.Entity.BetEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("BetId")
                        .HasColumnType("text")
                        .HasColumnName("bet_id");

                    b.Property<string>("EventCode")
                        .HasColumnType("text")
                        .HasColumnName("event_code");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid")
                        .HasColumnName("event_id");

                    b.Property<string>("MarketDescription")
                        .HasColumnType("text")
                        .HasColumnName("market_description");

                    b.Property<string>("MarketId")
                        .HasColumnType("text")
                        .HasColumnName("market_id");

                    b.Property<int>("MarketType")
                        .HasColumnType("integer")
                        .HasColumnName("market_type");

                    b.Property<decimal>("OddMatched")
                        .HasColumnType("numeric")
                        .HasColumnName("odd_matched");

                    b.Property<decimal>("OddRequest")
                        .HasColumnType("numeric")
                        .HasColumnName("odd_request");

                    b.Property<Guid>("PickTeamId")
                        .HasColumnType("uuid")
                        .HasColumnName("pick_team_id");

                    b.Property<DateTime>("PlacedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("placed_date");

                    b.Property<decimal>("PriceSettled")
                        .HasColumnType("numeric")
                        .HasColumnName("price_settled");

                    b.Property<decimal>("Profit")
                        .HasColumnType("numeric")
                        .HasColumnName("profit");

                    b.Property<int>("SelectionId")
                        .HasColumnType("integer")
                        .HasColumnName("selection_id");

                    b.Property<DateTime>("SettledDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("settled_date");

                    b.Property<string>("Side")
                        .HasColumnType("text")
                        .HasColumnName("side");

                    b.HasKey("Id")
                        .HasName("p_k_bets");

                    b.ToTable("bets");
                });

            modelBuilder.Entity("PlanningBet.Bets.API.Models.Entity.EventEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AwayTeamId")
                        .HasColumnType("uuid")
                        .HasColumnName("away_team_id");

                    b.Property<int>("BetCount")
                        .HasColumnType("integer")
                        .HasColumnName("bet_count");

                    b.Property<decimal>("Commission")
                        .HasColumnType("numeric")
                        .HasColumnName("commission");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("EventCode")
                        .HasColumnType("text")
                        .HasColumnName("event_code");

                    b.Property<Guid>("HomeTeamId")
                        .HasColumnType("uuid")
                        .HasColumnName("home_team_id");

                    b.Property<decimal>("Profit")
                        .HasColumnType("numeric")
                        .HasColumnName("profit");

                    b.HasKey("Id")
                        .HasName("p_k_events");

                    b.ToTable("events");
                });
#pragma warning restore 612, 618
        }
    }
}
